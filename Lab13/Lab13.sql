--1
CREATE OR REPLACE PROCEDURE GET_TEACHERS(PCODE TEACHER.PULPIT%TYPE)
IS
    CURSOR TEACHERS_ (PULP TEACHER.PULPIT%TYPE) IS SELECT * FROM TEACHER WHERE PULP = TEACHER.PULPIT;
    TEACHER_INFO TEACHER%ROWTYPE;
BEGIN
    FOR TEACHER_INFO IN TEACHERS_(PCODE)
    LOOP
        DBMS_OUTPUT.PUT_LINE(TEACHER_INFO.TEACHER || ' ' || TEACHER_INFO.TEACHER_NAME || ' ' || TEACHER_INFO.PULPIT);
    END LOOP;
END;

EXEC GET_TEACHERS('ISIT');

--2
SELECT * FROM TEACHER;
CREATE OR REPLACE FUNCTION GET_NUM_TEACHERS(PCODE TEACHER.PULPIT%TYPE) RETURN NUMBER
IS TEACH_COUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO TEACH_COUNT FROM TEACHER WHERE PCODE = TEACHER.PULPIT;
    RETURN TEACH_COUNT;
END;

SELECT GET_NUM_TEACHERS('ISIT') ISIT FROM DUAL;

SELECT * FROM FACULTY;

--3 

CREATE OR REPLACE PROCEDURE GET_TEACHERS(FCODE FACULTY.FACULTY%TYPE)
IS
    CURSOR FIO_BY_FAC (FACULT FACULTY.FACULTY%TYPE) IS SELECT TEACHER.TEACHER_NAME, PULPIT.FACULTY FROM TEACHER JOIN PULPIT
    ON TEACHER.PULPIT = PULPIT.PULPIT WHERE PULPIT.FACULTY = FACULT;
    TEACHER_FIO FIO_BY_FAC%ROWTYPE;
BEGIN
    FOR TEACHER_FIO IN FIO_BY_FAC(FCODE)
    LOOP
        DBMS_OUTPUT.PUT_LINE(TEACHER_FIO.TEACHER_NAME || ' <-------> ' || TEACHER_FIO.FACULTY);
    END LOOP;
END GET_TEACHERS;

SELECT * FROM SUBJECT;

CREATE OR REPLACE PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE)
IS
    CURSOR SUBJECTS_ (PULP SUBJECT.PULPIT%TYPE) IS SELECT * FROM SUBJECT WHERE PULP = SUBJECT.PULPIT;
    SUBJECT_INFO SUBJECT%ROWTYPE;
BEGIN
    FOR SUBJECT_INFO IN SUBJECTS_(PCODE)
    LOOP
        DBMS_OUTPUT.PUT_LINE(SUBJECT_INFO.SUBJECT || ' ---- ' || SUBJECT_INFO.SUBJECT_NAME || ' ' || SUBJECT_INFO.PULPIT);
    END LOOP;
END GET_SUBJECTS;

EXEC GET_SUBJECTS('ISIT');
EXEC GET_TEACHERS('PAP');


--5
CREATE OR REPLACE FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER
IS TEACH_COUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO TEACH_COUNT FROM TEACHER JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT WHERE FCODE = PULPIT.FACULTY;
    RETURN TEACH_COUNT;
END;

CREATE OR REPLACE FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER
IS SUBJ_COUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO SUBJ_COUNT FROM SUBJECT WHERE PCODE = SUBJECT.PULPIT;
    RETURN SUBJ_COUNT;
END;

SELECT GET_NUM_TEACHERS('PAP') FROM DUAL;
SELECT GET_NUM_SUBJECTS('ISIT') FROM DUAL;

--6
create or replace PACKAGE TEACHERS IS

PROCEDURE GET_TEACHERS(FCODE FACULTY.FACULTY%TYPE);
PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE);
FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER;
FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER;

END TEACHERS;

CREATE OR REPLACE PACKAGE BODY TEACHERS IS

    FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER
    IS TEACH_COUNT NUMBER;
    BEGIN
        SELECT COUNT(*) INTO TEACH_COUNT FROM TEACHER JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT WHERE FCODE = PULPIT.FACULTY;
        RETURN TEACH_COUNT;
    END GET_NUM_TEACHERS;
    FUNCTION GET_NUM_SUBJECTS(PCODE FACULTY.FACULTY%TYPE) RETURN NUMBER
    IS SUBJ_COUNT NUMBER;
    BEGIN
        SELECT COUNT(*) INTO SUBJ_COUNT FROM SUBJECT WHERE PCODE = FACULTY.FACULTY;
        RETURN SUBJ_COUNT;
    END;
    PROCEDURE GET_TEACHERS(FCODE FACULTY.FACULTY%TYPE)
    IS
    CURSOR TEACHERS_ (PULP TEACHER.FACULTY%TYPE) IS SELECT * FROM TEACHER WHERE PULP = FACULTY.FACULTY;
    TEACHER_INFO TEACHER%ROWTYPE;
    BEGIN
        FOR TEACHER_INFO IN TEACHERS_(FCODE)
        LOOP
            DBMS_OUTPUT.PUT_LINE(TEACHER_INFO.TEACHER || ' ' || TEACHER_INFO.TEACHER_NAME || ' ' || TEACHER_INFO.PULPIT);
        END LOOP;
    END GET_TEACHERS;  
    PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE)
    IS
    CURSOR SUBJECTS_ (PULP SUBJECT.PULPIT%TYPE) IS SELECT * FROM SUBJECT WHERE PULP = SUBJECT.PULPIT;
    SUBJECT_INFO SUBJECT%ROWTYPE;
    BEGIN
        FOR SUBJECT_INFO IN SUBJECTS_(PCODE)
        LOOP
            DBMS_OUTPUT.PUT_LINE(SUBJECT_INFO.SUBJECT || ' ---- ' || SUBJECT_INFO.SUBJECT_NAME || ' ' || SUBJECT_INFO.PULPIT);
        END LOOP;
    END GET_SUBJECTS;
    
    BEGIN
        NULL;
    EXCEPTION WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('NOT INITIALIZED');    
END TEACHERS;

    PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE)
    IS
    CURSOR SUBJECTS_ (PULP SUBJECT.PULPIT%TYPE) IS SELECT * FROM SUBJECT WHERE PULP = SUBJECT.PULPIT;
    SUBJECT_INFO SUBJECT%ROWTYPE;
    BEGIN
        FOR SUBJECT_INFO IN SUBJECTS_(PCODE)
        LOOP
            DBMS_OUTPUT.PUT_LINE(SUBJECT_INFO.SUBJECT || ' ---- ' || SUBJECT_INFO.SUBJECT_NAME || ' ' || SUBJECT_INFO.PULPIT);
        END LOOP;
    END GET_SUBJECTS;
BEGIN
    TEACHERS.GET_TEACHERS('PAP');
    --TEACHERS.GET_SUBJECTS('ISIT');
    --DBMS_OUTPUT.PUT_LINE('COUNT OF TEACHERS' || TEACHERS.GET_NUM_TEACHERS('PAP'));
    --DBMS_OUTPUT.PUT_LINE('COUNT OF SUBJECTS' || TEACHERS.GET_NUM_SUBJECTS('ISIT'));
END;